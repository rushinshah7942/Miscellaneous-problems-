/*
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
*/

// there are multiple solutions to this problem
// All has time complexity of O(s+t)

//6 ms
public class Solution 
{
	// similar approach to given a array, find which only number appears only once
    public char findTheDifference(String s, String t) 
    {
        char[] stArray = (s + t).toCharArray();
        char res = 0;
        for (char elem : stArray) 
        {
            res ^= elem;
        }
        
        return res;
    }
}

// 7 ms
public char findTheDifference(String s, String t) 
{
	int[] index = new int[26];
	
	for (char c : s.toCharArray())
		index[ c - 'a' ]++;

	for (char c : t.toCharArray()) 
	{
		if (index[c - 'a'] == 0)
			return c;
		else
			index[c - 'a']--;
	}

	return 0;
}


public char findTheDifference(String s, String t) 
{
	int totalS = 0, totalT = 0;
	for (int i = 0; i < s.length(); ++i) 
		totalS += (int)s.charAt(i);
	for (int i = 0; i < t.length(); ++i) 
		totalT += (int)t.charAt(i);
	return (char)(totalT - totalS);
}


